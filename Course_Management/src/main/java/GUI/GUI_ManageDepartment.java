
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.BUS_Department;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import DTO.DTO_Department;
import DAO.DAO_Department;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Đức Anh
 */
public class GUI_ManageDepartment extends javax.swing.JFrame {

    private static int pos = 0;
    SimpleDateFormat Date = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    public DAO_Department daoDepartment = new DAO_Department();
    public DTO_Department dtoDepartment = new DTO_Department();
    public BUS_Department busDepartment = new BUS_Department();

    /**
     * Creates new form ManageDepartment
     */
    public GUI_ManageDepartment() {
        initComponents();
        try {
            listDepartment();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
        }
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int option = JOptionPane.showConfirmDialog(
                        GUI_ManageDepartment.this,
                        "Bạn có chắc muốn đóng ứng dụng không?",
                        "Xác nhận đóng",
                        JOptionPane.YES_NO_OPTION
                );

                if (option == JOptionPane.YES_OPTION) {
                    // Thực hiện các thao tác cần thiết trước khi đóng ứng dụng
                    // Ví dụ: Lưu dữ liệu, đóng kết nối, v.v.

                    // Đóng JFrame
                    dispose();
                    String[] args = null;
                    GUI_ChooseOption.main(args);
                }
            }
        });
    }

    private DefaultTableModel convertDepartment(List list) {
        String[] columnNames = {"Department ID", "Name", "Budget", "Start Date", "Administrator"};
        Object[][] data = new Object[list.size()][5];
        for (int i = 0; i < list.size(); i++) {
            DTO_Department dtoDepartment = (DTO_Department) list.get(i);
            data[i][0] = dtoDepartment.getID();
            data[i][1] = dtoDepartment.getNAME();
            data[i][2] = dtoDepartment.getBUDGET();
            data[i][3] = dtoDepartment.getSTARTDATE();
            data[i][4] = dtoDepartment.getADMINISTRATOR();
        }
        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        return model;
    }

    private void listDepartment() throws SQLException {
//        DAO_Department daoDepartment = new DAO_Department();
//        List list = daoDepartment.ReadDepartment();
//        
//        DefaultTableModel model = convertDepartment(list);
//        DataTable.setModel(model);
        BUS_Department busDepartment = new BUS_Department();
        List list = busDepartment.LoadDepartment(1);
        DefaultTableModel model = convertDepartment(list);
        DataTable.setModel(model);
        LabelStatus.setText("Num Of Departments: " + list.size());
    }

    public void View() throws SQLException {
        DAO_Department department = new DAO_Department();
        ArrayList list = department.ReadDepartment();
        DTO_Department dtoDepartment = (DTO_Department) list.get(pos);
        this.LabelDepartmentID.setText(dtoDepartment.getID() + "");
        this.TextFieldName.setText(dtoDepartment.getNAME());
        this.TextFieldBudget.setText(Double.toString(dtoDepartment.getBUDGET()));
        this.TextFieldStartDate.setText(Date.format(dtoDepartment.getSTARTDATE()));
        this.TextFieldAdministrator.setText(dtoDepartment.getADMINISTRATOR());
    }

    public void NullView() throws SQLException {
        this.LabelDepartmentID.setText("");
        this.TextFieldName.setText("");
        this.TextFieldBudget.setText("");
        this.TextFieldStartDate.setText("");
        this.TextFieldAdministrator.setText("");
        this.TextFieldSearch.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelTitle = new javax.swing.JPanel();
        LabelTitle = new javax.swing.JLabel();
        PanelFunction = new javax.swing.JPanel();
        LabelDepartmentId = new javax.swing.JLabel();
        TextFieldName = new javax.swing.JTextField();
        LabelName = new javax.swing.JLabel();
        LabelBudget = new javax.swing.JLabel();
        TextFieldBudget = new javax.swing.JTextField();
        LabelAdministrator = new javax.swing.JLabel();
        TextFieldStartDate = new javax.swing.JTextField();
        TextFieldAdministrator = new javax.swing.JTextField();
        LabelStartDate = new javax.swing.JLabel();
        LabelSearch = new javax.swing.JLabel();
        TextFieldSearch = new javax.swing.JTextField();
        ButtonEdit = new javax.swing.JButton();
        ButtonAdd = new javax.swing.JButton();
        ButtonDelete = new javax.swing.JButton();
        ButtonSearch = new javax.swing.JButton();
        ButtonQuit = new javax.swing.JButton();
        ButtonRefresh = new javax.swing.JButton();
        LabelDepartmentID = new javax.swing.JLabel();
        PanelTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataTable = new javax.swing.JTable();
        LabelStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Department");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        PanelTitle.setBackground(new java.awt.Color(200, 200, 200));

        LabelTitle.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        LabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelTitle.setText("MANAGE DEPARTMENT");
        LabelTitle.setToolTipText("");

        javax.swing.GroupLayout PanelTitleLayout = new javax.swing.GroupLayout(PanelTitle);
        PanelTitle.setLayout(PanelTitleLayout);
        PanelTitleLayout.setHorizontalGroup(
            PanelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTitleLayout.createSequentialGroup()
                .addContainerGap(473, Short.MAX_VALUE)
                .addComponent(LabelTitle)
                .addGap(411, 411, 411))
        );
        PanelTitleLayout.setVerticalGroup(
            PanelTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addContainerGap())
        );

        LabelDepartmentId.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        LabelDepartmentId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelDepartmentId.setText("Department ID: ");

        TextFieldName.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        TextFieldName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextFieldName.setToolTipText("");
        TextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldNameActionPerformed(evt);
            }
        });

        LabelName.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        LabelName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelName.setText("Name:");

        LabelBudget.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        LabelBudget.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelBudget.setText("Budget: ");

        TextFieldBudget.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        TextFieldBudget.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextFieldBudget.setToolTipText("");

        LabelAdministrator.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        LabelAdministrator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelAdministrator.setText("Administrator");

        TextFieldStartDate.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        TextFieldStartDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextFieldStartDate.setToolTipText("");
        TextFieldStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldStartDateActionPerformed(evt);
            }
        });

        TextFieldAdministrator.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        TextFieldAdministrator.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextFieldAdministrator.setToolTipText("");
        TextFieldAdministrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldAdministratorActionPerformed(evt);
            }
        });

        LabelStartDate.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        LabelStartDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelStartDate.setText("StartDate: ");

        LabelSearch.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        LabelSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelSearch.setText("Search:");

        TextFieldSearch.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        TextFieldSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextFieldSearch.setToolTipText("");
        TextFieldSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TextFieldSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TextFieldSearchMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TextFieldSearchMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TextFieldSearchMouseReleased(evt);
            }
        });
        TextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldSearchActionPerformed(evt);
            }
        });
        TextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextFieldSearchKeyPressed(evt);
            }
        });

        ButtonEdit.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ButtonEdit.setText("Edit");
        ButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditActionPerformed(evt);
            }
        });

        ButtonAdd.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ButtonAdd.setText("Add");
        ButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddActionPerformed(evt);
            }
        });

        ButtonDelete.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ButtonDelete.setText("Delete");
        ButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteActionPerformed(evt);
            }
        });

        ButtonSearch.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ButtonSearch.setText("Search");
        ButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSearchActionPerformed(evt);
            }
        });

        ButtonQuit.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ButtonQuit.setText("Quit");
        ButtonQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonQuitActionPerformed(evt);
            }
        });

        ButtonRefresh.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ButtonRefresh.setText("Refresh");
        ButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRefreshActionPerformed(evt);
            }
        });

        LabelDepartmentID.setFont(new java.awt.Font("Times New Roman", 2, 25)); // NOI18N
        LabelDepartmentID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PanelFunctionLayout = new javax.swing.GroupLayout(PanelFunction);
        PanelFunction.setLayout(PanelFunctionLayout);
        PanelFunctionLayout.setHorizontalGroup(
            PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFunctionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelBudget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelDepartmentId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(TextFieldName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(TextFieldBudget)
                    .addComponent(LabelDepartmentID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(LabelStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LabelAdministrator, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(TextFieldStartDate)
                        .addComponent(TextFieldAdministrator, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFunctionLayout.createSequentialGroup()
                        .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33))
                    .addGroup(PanelFunctionLayout.createSequentialGroup()
                        .addComponent(ButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ButtonQuit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        PanelFunctionLayout.setVerticalGroup(
            PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFunctionLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelFunctionLayout.createSequentialGroup()
                        .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LabelDepartmentId, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LabelDepartmentID, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ButtonRefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ButtonQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LabelBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TextFieldBudget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PanelFunctionLayout.createSequentialGroup()
                        .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelAdministrator, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldAdministrator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(PanelFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        DataTable.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        DataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Department ID", "Name", "Budget", "Start Date", "Administrator"
            }
        ));
        DataTable.setRowHeight(40);
        DataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DataTableMouseClicked(evt);
            }
        });
        DataTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DataTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DataTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(DataTable);

        LabelStatus.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        LabelStatus.setText("Status");

        javax.swing.GroupLayout PanelTableLayout = new javax.swing.GroupLayout(PanelTable);
        PanelTable.setLayout(PanelTableLayout);
        PanelTableLayout.setHorizontalGroup(
            PanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(PanelTableLayout.createSequentialGroup()
                        .addComponent(LabelStatus)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelTableLayout.setVerticalGroup(
            PanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelStatus))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PanelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelFunction, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldNameActionPerformed

    private void TextFieldAdministratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldAdministratorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldAdministratorActionPerformed

    private void TextFieldStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldStartDateActionPerformed

    private void TextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldSearchActionPerformed

    private void ButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteActionPerformed
        // TODO add your handling code here:
        String departmentId = LabelDepartmentID.getText();
        try {
            if (busDepartment.DeleteDepartment(departmentId) > 0) {
                JOptionPane.showMessageDialog(this, "Complete delete department", "Message", JOptionPane.INFORMATION_MESSAGE);
                listDepartment();
            } else {
                JOptionPane.showMessageDialog(this, "Error delete department", "Message", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUI_Department.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_ButtonDeleteActionPerformed

    private void ButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddActionPerformed
        // TODO add your handling code here:

        try {
            //dtoDepartment.setID(TextFieldId.getText()); 
            dtoDepartment.setNAME(TextFieldName.getText());
            dtoDepartment.setADMINISTRATOR(TextFieldAdministrator.getText());

            dtoDepartment.setBUDGET(Double.parseDouble(TextFieldBudget.getText()));
            try {
                dtoDepartment.setSTARTDATE(new SimpleDateFormat("dd/MM/yyyy").parse(TextFieldStartDate.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (busDepartment.AddDepartment(dtoDepartment) > 0) {
                //NullView();
                JOptionPane.showMessageDialog(this, "Complete add department", "Message", JOptionPane.INFORMATION_MESSAGE);
                listDepartment();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error add department", "Message", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ButtonAddActionPerformed

    private void ButtonQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonQuitActionPerformed
        String[] args = null;
        dispose();
        GUI_ChooseOption.main(args);
    }//GEN-LAST:event_ButtonQuitActionPerformed

    private void DataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DataTableMouseClicked
        // TODO add your handling code here:
        pos = this.DataTable.getSelectedRow();
        try {
            View();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DataTableMouseClicked

    private void DataTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DataTableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DataTableKeyPressed

    private void DataTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DataTableKeyReleased
        // TODO add your handling code here:
        pos = this.DataTable.getSelectedRow();
        try {
            View();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DataTableKeyReleased

    private void ButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRefreshActionPerformed

        pos = this.DataTable.getSelectedRow();
        try {
            NullView();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            // TODO add your handling code here:
            listDepartment();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ButtonRefreshActionPerformed

    private void ButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSearchActionPerformed
        // TODO add your handling code here:
        try {

            String searchInput = TextFieldSearch.getText();
            if (searchInput.isBlank() == false) {
                List list = busDepartment.FindDepartment(searchInput);
                DefaultTableModel model = convertDepartment(list);
                DataTable.setModel(model);
                LabelStatus.setText("Num of rows: " + list.size());
            } else {
                JOptionPane.showMessageDialog(this, "Department is empty", "Message", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonSearchActionPerformed

    private void TextFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFieldSearchKeyPressed

    }//GEN-LAST:event_TextFieldSearchKeyPressed

    private void TextFieldSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextFieldSearchMouseExited
        // TODO add your handling code here:
//        try {
//            
//            String searchInput = TextFieldSearch.getText();
//            if (searchInput.isBlank() == false) {
//                List list = busDepartment.FindDepartment(searchInput);
//                DefaultTableModel model = convertDepartment(list);
//                DataTable.setModel(model);
//                LabelStatus.setText("Num of rows: " + list.size());
//            } else {
//                JOptionPane.showMessageDialog(this, "Department is empty", "Message", JOptionPane.ERROR_MESSAGE);
//            }
//            
//        } catch (SQLException ex) {
//            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_TextFieldSearchMouseExited

    private void TextFieldSearchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextFieldSearchMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldSearchMouseReleased

    private void TextFieldSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextFieldSearchMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_TextFieldSearchMouseEntered

    private void TextFieldSearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextFieldSearchMousePressed
        // TODO add your handling code here:
//        try {
//            
//            String searchInput = TextFieldSearch.getText();
//            if (searchInput.isBlank() == false) {
//                List list = busDepartment.FindDepartment(searchInput);
//                DefaultTableModel model = convertDepartment(list);
//                DataTable.setModel(model);
//                LabelStatus.setText("Num of rows: " + list.size());
//            } else {
//                JOptionPane.showMessageDialog(this, "Department is empty", "Message", JOptionPane.ERROR_MESSAGE);
//            }
//            
//        } catch (SQLException ex) {
//            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_TextFieldSearchMousePressed

    private void ButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditActionPerformed

        try {
            dtoDepartment.setID( Integer.parseInt(LabelDepartmentID.getText()));
            dtoDepartment.setNAME(TextFieldName.getText());
            dtoDepartment.setADMINISTRATOR(TextFieldAdministrator.getText());

            dtoDepartment.setBUDGET(Double.parseDouble(TextFieldBudget.getText()));
            try {
                dtoDepartment.setSTARTDATE(new SimpleDateFormat("dd/MM/yyyy").parse(TextFieldStartDate.getText()));
                if (busDepartment.EditDepartment(dtoDepartment) > 0) {
                    JOptionPane.showMessageDialog(this, "Complete edit department", "Message", JOptionPane.INFORMATION_MESSAGE);
                    listDepartment();
                }
            } catch (ParseException ex) {
                Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error edit department", "Message", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(GUI_ManageDepartment.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ButtonEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_ManageDepartment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_ManageDepartment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_ManageDepartment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_ManageDepartment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_ManageDepartment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton ButtonAdd;
    public javax.swing.JButton ButtonDelete;
    public javax.swing.JButton ButtonEdit;
    public javax.swing.JButton ButtonQuit;
    public javax.swing.JButton ButtonRefresh;
    public javax.swing.JButton ButtonSearch;
    public javax.swing.JTable DataTable;
    public javax.swing.JLabel LabelAdministrator;
    public javax.swing.JLabel LabelBudget;
    public javax.swing.JLabel LabelDepartmentID;
    public javax.swing.JLabel LabelDepartmentId;
    public javax.swing.JLabel LabelName;
    public javax.swing.JLabel LabelSearch;
    public javax.swing.JLabel LabelStartDate;
    private javax.swing.JLabel LabelStatus;
    public javax.swing.JLabel LabelTitle;
    public javax.swing.JPanel PanelFunction;
    public javax.swing.JPanel PanelTable;
    public javax.swing.JPanel PanelTitle;
    public javax.swing.JTextField TextFieldAdministrator;
    public javax.swing.JTextField TextFieldBudget;
    public javax.swing.JTextField TextFieldName;
    public javax.swing.JTextField TextFieldSearch;
    public javax.swing.JTextField TextFieldStartDate;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}

