/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.BUS_OfficeAssignment;
import BUS.BUS_OnlineCourse;
import DTO.DTO_Course;
import DTO.DTO_OfficeAssignment;
import DTO.DTO_OnlineCourse;
import DTO.DTO_Person;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class GUI_OfficeAssignment extends javax.swing.JFrame {

    int INSTRUCTOR_COLUMN_ID = 0;
    int LOCATION_COLUMN_POSITION = 3;
    List<DTO_OfficeAssignment> officeAssignments;
    List<DTO_Person> instructorsWithoutOffice;

    /**
     * Creates new form OfficeAssignment
     */
    public GUI_OfficeAssignment() {
        initComponents();
        showAllInstructorsWithoutOffice();
        showAllOfficeAssignments();
        addEventEditLocation();
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int option = JOptionPane.showConfirmDialog(
                        GUI_OfficeAssignment.this,
                        "Bạn có chắc muốn đóng ứng dụng không?",
                        "Xác nhận đóng",
                        JOptionPane.YES_NO_OPTION
                );

                if (option == JOptionPane.YES_OPTION) {
                    // Thực hiện các thao tác cần thiết trước khi đóng ứng dụng
                    // Ví dụ: Lưu dữ liệu, đóng kết nối, v.v.

                    // Đóng JFrame
                    dispose();
                    String[] args = null;
                    GUI_ChooseOption.main(args);
                }
            }
        });
    }

    void showAllInstructorsWithoutOffice() {
        try {
            cbSelectInstructor.removeAllItems();
            this.instructorsWithoutOffice = new BUS_OfficeAssignment().getAllInstructorsWithoutOffice();
            for (DTO_Person instructor : this.instructorsWithoutOffice) {
                cbSelectInstructor.addItem(instructor.getName());
            }
        } catch (Exception e) {
        }
    }

    void showAllOfficeAssignments() {
        this.officeAssignments = new BUS_OfficeAssignment().getAll();
        String[] columnNames = {"Instructor ID", "Last name", "First name", "Location", "Timestamp"};

        Object[][] data = new Object[this.officeAssignments.size()][columnNames.length];
        for (int i = 0; i < this.officeAssignments.size(); i++) {
            DTO_OfficeAssignment officeAssignment = (DTO_OfficeAssignment) this.officeAssignments.get(i);
            data[i][0] = officeAssignment.getId();
            data[i][1] = officeAssignment.getLast_name();
            data[i][2] = officeAssignment.getFirst_name();
            data[i][LOCATION_COLUMN_POSITION] = officeAssignment.getLOCATION();
            data[i][4] = officeAssignment.getTIMESTAMP().toString();
        }
        DefaultTableModel model = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == LOCATION_COLUMN_POSITION;
            }
        };
        tbOfficeAssignment.setModel(model);
    }

    public void addEventEditLocation() {
        CellEditorListener ChangeNotification = new CellEditorListener() {
            @Override
            public void editingCanceled(ChangeEvent e) {
                System.out.println("The user canceled editing.");
            }

            @Override
            public void editingStopped(ChangeEvent e) {
                int selectedRow = tbOfficeAssignment.getSelectedRow();
                String changedLocation = tbOfficeAssignment.getValueAt(selectedRow, LOCATION_COLUMN_POSITION).toString();
                int instructorId = Integer.parseInt(tbOfficeAssignment.getValueAt(selectedRow, INSTRUCTOR_COLUMN_ID).toString());

                DTO_OfficeAssignment officeAssignment = new DTO_OfficeAssignment();
                officeAssignment.setId(instructorId);
                officeAssignment.setLOCATION(changedLocation);
                try {
                    new BUS_OfficeAssignment().update(officeAssignment);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        };
        tbOfficeAssignment.getDefaultEditor(String.class).addCellEditorListener(ChangeNotification);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbOfficeAssignment = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        cbSelectInstructor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbOfficeAssignment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Instructor ID", "First Name", "Last Name", "Location", "Timestamp"
            }
        ));
        jScrollPane1.setViewportView(tbOfficeAssignment);

        jLabel1.setText("Instructor");

        jLabel2.setText("Location :");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("OFFICE ASSIGNMENT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSelectInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(btnAdd)
                        .addGap(31, 31, 31)
                        .addComponent(btnDelete)
                        .addGap(0, 229, Short.MAX_VALUE)))
                .addGap(19, 19, 19))
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbSelectInstructor, txtLocation});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbSelectInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int instructorId = this.instructorsWithoutOffice.get(cbSelectInstructor.getSelectedIndex()).getId();
        String location = txtLocation.getText();
        DTO_OfficeAssignment officeAssignment = new DTO_OfficeAssignment();
        officeAssignment.setId(instructorId);
        officeAssignment.setLOCATION(location);
        try {
            new BUS_OfficeAssignment().add(officeAssignment);
            showAllInstructorsWithoutOffice();
            showAllOfficeAssignments();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int instructorId = this.officeAssignments.get(tbOfficeAssignment.getSelectedRow()).getId();
        try {
            new BUS_OfficeAssignment().delete(instructorId);
            showAllInstructorsWithoutOffice();
            showAllOfficeAssignments();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_OfficeAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_OfficeAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_OfficeAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_OfficeAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_OfficeAssignment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox<String> cbSelectInstructor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbOfficeAssignment;
    private javax.swing.JTextField txtLocation;
    // End of variables declaration//GEN-END:variables
}
